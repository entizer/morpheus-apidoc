# Logs

The Logs API allows fetching log records generated by your containers, hosts, and clusters.

## Get All Logs

Fetch a paginated list of logs records. By default the most recent records are returned.  Results may be scoped to specific containers, servers or a cluster.

```shell
curl "<%= shell_url %>/api/logs"
  -H "Authorization: BEARER <%= shell_token %>"
```

> The above command returns JSON structured like this:

```json
{
  "sort": {
    "ts": "desc"
  },
  "offset": 0,
  "start": "2019-10-18T01:04:55Z",
  "end": "2019-10-25T01:04:55Z",
  "data": [
    {
      "typeCode": "server",
      "level": "INFO",
      "sourceType": "sudo",
      "message": "  pam_unix(sudo:session): session closed for user root\n",
      "ts": "2019-10-25T00:57:46Z",
      "priority": 300,
      "hostname": "localhost",
      "objectId": "664",
      "seq": 5869011,
      "_id": "84781694-d7e8-463d-bb08-7f9e4022a1da"
    }
  ],
  "max": 25,
  "total": 32038,
  "success": true,
  "count": 25
}

```

### HTTP Request

`GET <%= api_url %>/api/logs`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
max | 25 | Max number of results to return
offset | 0 | Offset of records you want to load
sort | ts | Sort order
order | desc | Sort direction
query |  | Filter by wildcard search of fields
message |  | Filter by message.
sourceType |  | Filter by source type
typeCode |  | Filter by source type
objectId |  | Filter by objectId
token |  | Filter by token
level |  | Filter by log level. `DEBUG`, `INFO`, `ERROR`. Multiple values can be passed pipe delimited. Example: `WARN|ERROR`
startMs |  | Date filter, restricts query to only load logs updated more recently than the date specified.
endMs |  | Date filter, restricts query to only load logs updated before the date specified.
containers |  | Filter by Container ID. Accepts multiple values.
servers |  | Filter by Server ID. Accepts multiple values.
clusterId |  | Filter by Cluster ID

### Response

Name | Description
--------- | -----------
sort | The returned sort order.
offset | The returned offset value.
max | The returned max value
size | The number of records returned.
total | The total number of records found.
data | Array of [log record objects](#log-record-object).

### Log Record Object

Name | Description
--------- | -----------
typeCode | Log Type Code. Example: "server"
level | Log Source type. Example: "sudo"
sourceType | Log Source type. Example: "sudo"
message | Log message
ts | Log timestamp Example: "2019-10-25T01:04:46Z"
hostname | Hostname.
priority | Priority.
objectId | Object ID
seq | Log Sequence ID
_id | A Unique ID for this log record.

## Get Container Logs

Fetch a paginated list of logs, for specific containers only.

```shell
curl "<%= shell_url %>/api/logs?containers=3" \
  -H "Authorization: BEARER <%= shell_token %>"
```

> The above command returns JSON structured like this:

The response is the same as [Get All Logs](#get-all-logs).


## Get Host Logs

Fetch a paginated list of logs, for specific hosts only.

```shell
curl "<%= shell_url %>/api/logs?servers=3" \
  -H "Authorization: BEARER <%= shell_token %>"
```

> The above command returns JSON structured like this:

The response is the same as [Get All Logs](#get-all-logs).


## Get Cluster Logs

Fetch a paginated list of logs, for a specific cluster only.

```shell
curl "<%= shell_url %>/api/logs?clusterId=5" \
  -H "Authorization: BEARER <%= shell_token %>"
```

> The above command returns JSON structured like this:

The response is the same as [Get All Logs](#get-all-logs).
